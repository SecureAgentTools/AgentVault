"""Implement email/password auth, recovery keys, and dedicated API key table

Revision ID: xxxx_new_auth_models
Revises: e163cd45ddf7
Create Date: YYYY-MM-DD HH:MM:SS.ffffff # Alembic will generate this

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# --- MODIFIED: Import DateTime ---
from sqlalchemy import DateTime # Ensure DateTime is imported if needed
# --- END MODIFIED ---


# revision identifiers, used by Alembic.
revision: str = 'xxxx_new_auth_models' # Placeholder, replace with actual generated ID
down_revision: Union[str, None] = 'e163cd45ddf7' # Previous migration adding is_verified
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # --- Create developer_api_keys table ---
    op.create_table('developer_api_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('key_prefix', sa.String(length=10), nullable=False),
    sa.Column('hashed_key', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False), # Explicit server default
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hashed_key') # Ensure hashed keys are unique
    )
    op.create_index(op.f('ix_developer_api_keys_developer_id'), 'developer_api_keys', ['developer_id'], unique=False)
    op.create_index(op.f('ix_developer_api_keys_id'), 'developer_api_keys', ['id'], unique=False)
    op.create_index(op.f('ix_developer_api_keys_is_active'), 'developer_api_keys', ['is_active'], unique=False)
    op.create_index(op.f('ix_developer_api_keys_key_prefix'), 'developer_api_keys', ['key_prefix'], unique=False)
    # --- End developer_api_keys table ---

    # --- Modify developers table ---
    op.add_column('developers', sa.Column('email', sa.String(), nullable=False))
    op.add_column('developers', sa.Column('hashed_password', sa.String(), nullable=False))
    op.add_column('developers', sa.Column('email_verification_token', sa.String(), nullable=True))
    op.add_column('developers', sa.Column('verification_token_expires', sa.DateTime(timezone=True), nullable=True))
    op.add_column('developers', sa.Column('hashed_recovery_key', sa.String(), nullable=True))

    # Ensure is_verified index exists (might be redundant if already created, but safe)
    op.create_index(op.f('ix_developers_is_verified'), 'developers', ['is_verified'], unique=False)
    # Create indexes for new columns
    op.create_index(op.f('ix_developers_email'), 'developers', ['email'], unique=True)
    op.create_index(op.f('ix_developers_email_verification_token'), 'developers', ['email_verification_token'], unique=True)

    # Drop the old column AFTER adding new ones and creating table/FKs
    # Note: Need to handle potential data migration if preserving old keys was needed
    op.drop_column('developers', 'api_key_hash')
    # --- End modify developers table ---

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # --- Modify developers table (reverse) ---
    # Add back the old column (nullable temporarily if needed for data migration)
    op.add_column('developers', sa.Column('api_key_hash', sa.VARCHAR(), autoincrement=False, nullable=True)) # Make nullable temporarily
    # If data migration was done, update this column here before making non-nullable
    # op.execute("UPDATE developers SET api_key_hash = 'NEEDS_MIGRATION' WHERE api_key_hash IS NULL") # Placeholder
    # op.alter_column('developers', 'api_key_hash', nullable=False) # Make non-nullable again if required

    op.drop_index(op.f('ix_developers_email_verification_token'), table_name='developers')
    op.drop_index(op.f('ix_developers_email'), table_name='developers')
    op.drop_index(op.f('ix_developers_is_verified'), table_name='developers') # Drop index added/ensured in upgrade

    op.drop_column('developers', 'hashed_recovery_key')
    op.drop_column('developers', 'verification_token_expires')
    op.drop_column('developers', 'email_verification_token')
    op.drop_column('developers', 'hashed_password')
    op.drop_column('developers', 'email')
    # --- End modify developers table ---

    # --- Drop developer_api_keys table ---
    op.drop_index(op.f('ix_developer_api_keys_key_prefix'), table_name='developer_api_keys')
    op.drop_index(op.f('ix_developer_api_keys_is_active'), table_name='developer_api_keys')
    op.drop_index(op.f('ix_developer_api_keys_id'), table_name='developer_api_keys')
    op.drop_index(op.f('ix_developer_api_keys_developer_id'), table_name='developer_api_keys')
    op.drop_table('developer_api_keys')
    # --- End drop developer_api_keys table ---

    # ### end Alembic commands ###
