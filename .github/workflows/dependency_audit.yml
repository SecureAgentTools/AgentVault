name: Security Dependency Audit

# Trigger on pushes and pull requests to the main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Optional: Allow manual trigger from Actions tab
  workflow_dispatch:

jobs:
  pip-audit:
    runs-on: ubuntu-latest
    # REMOVED strategy matrix
    name: Audit Project Dependencies # Changed name
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true # Create .venv in project root

      - name: Install pip-audit tool
        run: pipx install pip-audit

      - name: Load cached venv # Cache based on root lock file
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv # Cache the root venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }} # Use root lock file hash
          restore-keys: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

      - name: Update root lock file # Run in root
        run: poetry lock --no-update # Use --no-update if you only want consistency check, or remove if updates are okay
        # No working-directory needed, runs in root

      - name: Synchronize dependencies # Run in root
        run: |
          echo "Attempting to sync environment with root lock file using 'poetry install --sync'..."
          # Install dev dependencies too, as they might have vulnerabilities
          poetry install --sync --with dev --no-interaction
        # No working-directory needed, runs in root

      - name: Run pip-audit # Run in root
        run: |
          echo "Running pip-audit on installed packages in root venv..."
          # Execute pip-audit within the root virtual environment
          poetry run pip-audit --progress-spinner=off --strict
        # No working-directory needed, runs in root
