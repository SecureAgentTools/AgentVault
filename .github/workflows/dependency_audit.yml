  name: Security Dependency Audit
  
  # Trigger on pushes and pull requests to the main branch
  on:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]
    # Optional: Allow manual trigger from Actions tab
    workflow_dispatch:
  
  jobs:
    pip-audit:
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          component:
            - agentvault_library
            - agentvault_cli
            - agentvault_registry
            - agentvault_server_sdk
            # Add agentvault_testing_utils if it has dependencies to audit
            # - agentvault_testing_utils
      name: Audit ${{ matrix.component }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
  
        - name: Set up Python
          id: setup-python
          uses: actions/setup-python@v5
          with:
            python-version: '3.11'
  
        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true # Keep venv inside component dir
  
        - name: Install pip-audit tool
          run: pipx install pip-audit # Install tool globally for runner
  
        - name: Load cached venv for ${{ matrix.component }}
          id: cached-poetry-dependencies
          uses: actions/cache@v4
          with:
            path: ${{ matrix.component }}/.venv
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ matrix.component }}-${{ hashFiles(format('{0}/poetry.lock', matrix.component)) }}
            restore-keys: |
              venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ matrix.component }}-
  
        # --- ADDED: Regenerate lock file before install ---
        - name: Update lock file for ${{ matrix.component }}
          run: poetry lock --no-update
          working-directory: ${{ matrix.component }}
        # --- END ADDED ---
  
        - name: Install dependencies for ${{ matrix.component }}
          # Removed cache hit check - always install after lock update if needed
          run: poetry install --no-interaction --no-root
          working-directory: ${{ matrix.component }}
  
        - name: Run pip-audit for ${{ matrix.component }}
          run: |
            echo "Running pip-audit on installed packages in ${{ matrix.component }}'s venv..."
            # Activate the component's virtual environment first
            source .venv/bin/activate
            # Run pip-audit without --requirement to check installed packages
            pip-audit --progress-spinner=off --strict
          working-directory: ${{ matrix.component }} # Run from component dir to find .venv