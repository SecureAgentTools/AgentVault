# Using standard PEP 621 [project] table primarily
[project]
    name = "agentvault-cli"
    version = "0.1.0"
    description = "Command-line client for the AgentVault ecosystem."
    authors = [{ name = "Raphael Zbigniew Jeziorny", email = "AgentVault@proton.me" }]
    license = { text = "Apache-2.0" }
    readme = "README.md"
    requires-python = ">=3.10,<3.12"
    keywords = ["ai", "agent", "a2a", "mcp", "cli", "command-line", "client", "tool", "security", "key-management", "python", "click", "rich", "developer-tools"]
    classifiers = [
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Developers",
        "Intended Audience :: System Administrators",
        "License :: OSI Approved :: Apache Software License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Environment :: Console",
        "Topic :: Utilities",
        "Topic :: Security",
        "Topic :: Communications",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
    ]

    dependencies = [
        "click>=8.0,<9.0",
        "httpx>=0.27,<0.29", # Updated upper bound to match lock file
        "rich>=13.0,<15.0", # Updated upper bound to match lock file
        # Path dependency to agentvault library is handled by installation method
        # (e.g., poetry install in monorepo, or pip install -e .)
        # and doesn't have a standard representation here that works universally yet.
        # Poetry's section below handles it for poetry commands.
    ]

    # Define console scripts using standard syntax
    [project.scripts]
    agentvault_cli = "agentvault_cli.main:cli"

    [project.optional-dependencies]
    dev = [
        "pytest>=8.0,<9.0", # Match lock file
        "pytest-mock>=3.12,<4.0", # Match lock file
    ]

# Build System (unchanged)
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# --- Poetry Specific Configuration (Minimal) ---
# Keep only what's needed for Poetry's build/dev workflows
[tool.poetry]
# name, version, description, authors, license, readme are now primarily in [project]
# Keep packages definition for Poetry to find the code
packages = [{include = "agentvault_cli", from = "src"}]

# Dependencies defined here are used by Poetry's resolver but [project] is canonical
# Keep this section for Poetry's benefit, especially the path dependency.
[tool.poetry.dependencies]
python = ">=3.10,<3.12"
click = ">=8.0,<9.0"
httpx = ">=0.27,<0.29" # Match lock file
rich = ">=13.0,<15.0" # Match lock file
# Poetry needs this explicit path dependency for development installs
agentvault = {path = "../agentvault_library", develop = true}

# Dev dependencies defined here are used by Poetry but [project.optional-dependencies] is canonical
[tool.poetry.group.dev.dependencies]
pytest = ">=8.0,<9.0" # Match lock file
pytest-mock = ">=3.12,<4.0" # Match lock file

# Scripts section in [tool.poetry] is removed as it's now defined in [project.scripts]
